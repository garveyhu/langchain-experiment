[tool.poetry]
name = "textcraft"
version = "0.0.2"
description = "Amplify llm capabilities through langchain"
authors = ["Archer <archeruuuu@gmail.com>"]
readme = "README.md"
license = "Apache-2.0"

[tool.poetry.dependencies]
python = "^3.10"
bson = "*"
dashscope = "*"
fastapi = "*"
gradio = "*"
httpx = { version = "*", extras = ["socks"] }
langchain = "*"
langserve = { version = "*", extras = ["all"] }
openai = "*"
pinecone-client = "*"
pymongo = "3.11.4"
python-dotenv = "*"
python-multipart = "*"
redis = "*"
rich = "*"
streamlit = "*"
transformers = "*"
tiktoken = "*"
uvicorn = "*"
websocket-client = "*"

[tool.poetry.group.dev.dependencies]
black = "*"
isort = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
packages = ["textcraft"]
extend-exclude = '.+/(dist|.venv|venv|build)/.+'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
sections = [
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER"
]
skip = '''
    .tox
    __pycache__
    *.pyc
    .env
    venv*/*
    .venv/*
    reports/*
    dist/*
'''